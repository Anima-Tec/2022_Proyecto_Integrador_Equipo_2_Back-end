// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  DONATOR
  CENTER
}

enum UnitMeasurementType {
  KG
  BAG
  G
  ML
  L
}

model User {
  id                     String   @id @default(uuid())
  name                   String
  email                  String   @unique
  hashedPassword         String?
  email_validate         Boolean  @default(false)
  rol                    UserType
  onboardingStepPosition Int      @default(0)
  donator                Donator?
  center                 Center?
}

model Donator {
  id       String @id @default(uuid())
  lastName String
  user     User   @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Center {
  id                       String      @id @default(uuid())
  phone                    String
  numberVolunteersRequired Int?        @default(0)
  street                   String
  numberDoor               String
  description              String?     @default("")
  photo                    String?     @db.LongText
  zoneId                   String
  user                     User        @relation(fields: [id], references: [id], onDelete: Cascade)
  zone                     Zone        @relation(fields: [zoneId], references: [id], onDelete: Cascade)
  foods                    NeedsFood[]
}

model Department {
  id    String @id @default(uuid())
  name  String @unique
  zones Zone[]
}

model Zone {
  id           String     @id @default(uuid())
  name         String
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  centers      Center[]
}

model Food {
  id        String      @id @default(uuid())
  name      String
  category  String
  needsFood NeedsFood[]
}

model NeedsFood {
  foodId          String
  centerId        String
  amount          Int
  unitMeasurement UnitMeasurementType
  food            Food                @relation(fields: [foodId], references: [id], onDelete: Cascade)
  center          Center              @relation(fields: [centerId], references: [id], onDelete: Cascade)

  @@id([foodId, centerId])
}
